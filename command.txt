# FOR SETTING UP API
# create TensorFlow folder in wd

# create venv in wd and activate
python -m venv tf_api_env
source tf_api_env/bin/activate

# install tensorflow
pip install tensorflow == 2.3

# clone repo
git clone https://github.com/tensorflow/models.git

# compile files in protoc (in Tensorflow directory)
protoc/bin/protoc research/object_detection/protos/*.proto --python_out=.
# if run in "No file" error, change "import" statements in protoc files to from import object_detection/~ to import research/object_detection/~

# install COCO API (in TensorFlow directory)
pip install cython
git clone https://github.com/cocodataset/cocoapi.git
cd cocoapi/PythonAPI
make
cp -r pycocotools ./models/research/ # replace . with file path to models/research/

# set up Object Detection API (in models/research directory)
cp object_detection/packages/tf2/setup.py .
python -m pip install .

# if error install try
pip install --upgrade numpy
pip install pyparsing==2.4.2
# if "no module named 'research' error, go into files to manually delete "research." from import statements

# convert xml to csv files
python xml_to_csv.py

# generate tf records
python3 generate_tfrecord.py --csv_input=data/train_labels.csv --output_path=data/train.record --image_dir=images/ # train
python3 generate_tfrecord.py --csv_input=data/test_labels.csv --output_path=data/test.record --image_dir=images/ # test

# train
python3 model_main_tf2.py --logtostderr --train_dir=training/ --pipeline_config_path=training/pipeline.config --model_dir=mahjong_detection_model/         # model_dir = directory to save trained model, must be different than prev checkpoint dir

# Output graph
exporter_main_v2.py --input_type=image_tensor --pipeline_config_path=training/pipeline.config --trained_checkpoint_dir=mahjong_detection_model --output_directory=output_graph/
# if error try 
pip --upgrade protobuf=3.20
